{"version":3,"sources":["webpack://kevin-s-portfolio/./src/components/Layout.js","webpack://kevin-s-portfolio/./src/components/MediumList.js","webpack://kevin-s-portfolio/./src/components/MediumComponent.js","webpack://kevin-s-portfolio/./src/components/MainComponent.js","webpack://kevin-s-portfolio/./src/pages/index.js"],"names":["pageTitle","children","id","to","className","href","S","src","alt","layout","height","width","props","postInfo","post","node","uniqueSlug","title","content","subtitle","createdAt","query","render","allMediumPost","edges","map","key","placeholder","Layout"],"mappings":"yqIA+EA,IAxEe,SAAC,GAA6B,IAA3BA,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACzB,OACE,gCACE,uBAAKC,GAAG,mBACR,6BAAQF,GACR,8BAEE,gBAAC,KAAD,CAAMG,GAAG,IAAID,GAAG,gBACd,sBAAIE,UAAU,YAAd,iBACA,sBAAIA,UAAU,aAAd,kBAGF,uBAAKA,UAAU,aACb,gBAAC,KAAD,CAAMD,GAAG,KAAT,QACA,gBAAC,KAAD,CAAMA,GAAG,aAAT,YACA,gBAAC,KAAD,CAAMA,GAAG,WAAT,UACA,gBAAC,KAAD,CAAMA,GAAG,UAAT,WAIJ,4BACE,0BAAKH,GACJC,GAEH,8BACE,uBAAKG,UAAU,gBACf,qBAAGC,KAAK,8CACR,gBAAC,EAAAC,EAAD,CACEC,IAAK,+BACLC,IAAK,WACLJ,UAAU,gBACVK,OAAO,QACPC,OAAQ,GACRC,MAAO,GANT,sBASD,qBAAGN,KAAK,kCACR,gBAAC,EAAAC,EAAD,CACGC,IAAK,6BACLC,IAAK,SACLJ,UAAU,cACVK,OAAO,QACPC,OAAQ,GACRC,MAAO,GANV,uBASA,qBAAGN,KAAK,iCACR,gBAAC,EAAAC,EAAD,CACGC,IAAK,6BACLC,IAAK,SACLJ,UAAU,cACVK,OAAO,QACPC,OAAQ,GACRC,MAAO,GANV,uBASD,gBAAC,KAAD,CAAMR,GAAG,YACT,gBAAC,EAAAG,EAAD,CACIC,IAAK,4BACLC,IAAK,QACLJ,UAAU,aACVK,OAAO,QACPC,OAAQ,GACRC,MAAO,GANX,4B,uGCjDR,EAbmB,SAACC,GAEhB,IAAMC,EAAWD,EAAME,KAAKC,KAE5B,OACI,uBAAKX,UAAU,gBACX,qBAAGA,UAAU,aAAaC,KAAI,kCAAoCQ,EAASG,YAAeH,EAASI,OACnG,uBAAKb,UAAU,gBAAgBS,EAASK,QAAQC,UAChD,uBAAKf,UAAU,aAAaS,EAASO,aC2CjD,EAjDwB,WAEpB,OACI,gBAAC,KAAD,CACAC,MAAK,YA+BLC,OAAQ,gBAAGC,EAAH,EAAGA,cAAH,OACJ,gCACA,uBAAKnB,UAAU,gBACdmB,EAAcC,MAAMC,KAAI,SAAAX,GAAI,OACzB,gBAAC,EAAD,CAAYY,IAAKZ,EAAKC,KAAKC,WAAYF,KAAMA,a,oBCnB7D,EApBsB,WAElB,OACI,gCACA,uBAAKV,UAAU,sBACf,uBAAKA,UAAU,2BACf,gBAAC,KAAD,CAAMD,GAAG,UACL,gBAAC,EAAAG,EAAD,CACAC,IAAI,qCACJC,IAAI,qBACJJ,UAAU,gBACVuB,YAAY,UAJZ,2BCsBZ,EAvBc,WAGZ,OACE,gBAACC,EAAA,EAAD,CAAQ5B,UAAU,YAChB,uBAAKI,UAAU,iBACT,gBAAC,EAAAE,EAAD,CACAC,IAAK,qCACLC,IAAK,QACLJ,UAAU,cACVuB,YAAY,OAJZ,uBAON,uBAAKvB,UAAU,yBACX,gBAAC,EAAD,MACF,uBAAKA,UAAU,cACb,gBAAC,EAAD","file":"component---src-pages-index-js-1358cabc2d46297dc67d.js","sourcesContent":["import React from 'react'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { Link } from 'gatsby'\n\nimport '../css/custom.css'\n\n\nconst Layout = ({ pageTitle, children }) => {\n    return (\n      <>\n        <div id='background-img' />\n        <title>{pageTitle}</title>\n        <header>\n\n          <Link to=\"/\" id='name-wrapper'>\n            <h2 className=\"dev-name\">Kevin Gleeson</h2>\n            <h5 className=\"dev-title\">Web Developer</h5>\n          </Link>\n          \n          <nav className='nav-links'>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/projects\">Projects</Link>\n            <Link to=\"/resume\">Resume</Link>\n            <Link to=\"/about\">About</Link>\n          </nav>\n\n        </header>\n        <main>\n          <h1>{pageTitle}</h1>\n          {children}\n        </main>\n        <footer>\n          <div className=\"social-icons\">\n          <a href=\"https://www.linkedin.com/in/teapuddles824/\">\n          <StaticImage \n            src= \"../images/icons/linkedin.png\"\n            alt= \"linkedin\"\n            className=\"linkedin-icon\"\n            layout=\"fixed\"\n            height={45}\n            width={45}\n            />\n              </a>\n         <a href=\"https://teapuddles.medium.com/\">\n         <StaticImage \n            src= \"../images/icons/medium.png\"\n            alt= \"medium\"\n            className=\"medium-icon\"\n            layout=\"fixed\"\n            height={45}\n            width={45}\n            />\n              </a>\n         <a href=\"https://github.com/teapuddles\">   \n         <StaticImage \n            src= \"../images/icons/github.png\"\n            alt= \"github\"\n            className=\"github-icon\"\n            layout=\"fixed\"\n            height={45}\n            width={45}\n            />\n                </a> \n        <Link to=\"/contact\">    \n        <StaticImage \n            src= \"../images/icons/email.png\"\n            alt= \"email\"\n            className=\"email-icon\"\n            layout=\"fixed\"\n            height={45}\n            width={45}\n            />  \n              </Link>\n          </div>\n        </footer>\n      </>\n    )\n  }\n  \nexport default Layout\n","import React from 'react'\n\nconst MediumList = (props) => {\n\n    const postInfo = props.post.node\n\n    return(\n        <div className=\"medium-slice\" >\n            <a className='post-title' href={`https://medium.com/@teapuddles/${postInfo.uniqueSlug}`}>{postInfo.title}</a>\n            <div className='post-content'>{postInfo.content.subtitle}</div>\n            <div className='post-date'>{postInfo.createdAt}</div>\n        </div>\n    )\n}\n\nexport default MediumList","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport MediumList from './MediumList'\n\nconst MediumComponent = () => {\n\n    return(\n        <StaticQuery\n        query={graphql`\n          query MediumComponent {\n            #   query our medium component with the endpoint of allMediumPost\n            #   we also have the opprotunity to limit what goes in/the order/sorted by what\n            allMediumPost(limit: 4, sort: { fields: createdAt, order: DESC }) {\n                # below is the query we're making, you can filter and follow along with gql to find\n                # what each of these will yeild. \n              edges {\n                node {\n                  id\n                  uniqueSlug\n                  title\n                  createdAt(formatString: \"MMM YYYY\")\n                  virtuals {\n                    previewImage {\n                      imageId\n                    }\n                  }\n                  author {\n                    username\n                  }\n                  content {\n                    subtitle\n                    metaDescription\n                 }\n                }\n              }\n            }\n          }\n        `}\n        // we call the allMediumPost query down here and render our results into our List Component\n        render={({ allMediumPost }) => (\n            <>\n            <div className='medium-posts'>\n            {allMediumPost.edges.map(post => (\n                <MediumList key={post.node.uniqueSlug} post={post} />\n            ))}\n            </div>\n            </>\n            )}\n        />\n        // end of static query component\n    )\n}\n\nexport default MediumComponent","import React from 'react'\nimport { Link } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nconst MainComponent = () => {\n\n    return(\n        <>\n        <div className=\"main-image-wrapper\">\n        <div className=\"landing-image-container\" >\n        <Link to=\"/about\">\n            <StaticImage \n            src=\"../images/kevinPics/ChinaKevin.jpg\"\n            alt=\"kevin at HuangShan\"\n            className=\"landing-image\"\n            placeholder=\"blurred\"\n            />\n            </Link>\n        </div>\n        </div>\n        </>\n    )\n}\n\nexport default MainComponent","import React from 'react'\nimport '../css/custom.css'\nimport MediumComponent from '../components/MediumComponent'\nimport Layout from '../components/Layout.js'\nimport MainComponent from '../components/MainComponent'\n\nimport { StaticImage } from 'gatsby-plugin-image'\n\n// index is my root/entry point\n\nconst Index = () => {\n  \n\n  return (\n    <Layout pageTitle='Welcome.'>\n      <div className=\"cloud-wrapper\">\n            <StaticImage \n            src= \"../images/kevinPics/smallCloud.png\"\n            alt= \"cloud\"\n            className=\"small-cloud\"\n            placeholder=\"none\"\n            />\n        </div>\n      <div className=\"main-component-layout\">\n          <MainComponent />\n        <div className=\"medium-box\">\n          <MediumComponent />\n        </div>\n      </div>\n    </Layout>\n  )}\n\n\nexport default Index\n\n"],"sourceRoot":""}